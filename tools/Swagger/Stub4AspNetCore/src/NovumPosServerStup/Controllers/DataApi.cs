/*
 * OrderSolution HTTP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.9.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using NovumPosServerStup.Attributes;
using NovumPosServerStup.Models;

namespace NovumPosServerStup.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DataApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/Articles")]
        [ValidateModelState]
        [SwaggerOperation("ArticlesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Article>), description: "")]
        public virtual IActionResult ArticlesGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Article>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"receiptName\" : \"receiptName\",\r\n  \"name\" : \"name\",\r\n  \"plu\" : \"plu\",\r\n  \"forceShowModifiers\" : true,\r\n  \"id\" : \"id\",\r\n  \"modifierGroups\" : [ {\r\n    \"modifierGroupId\" : \"modifierGroupId\"\r\n  }, {\r\n    \"modifierGroupId\" : \"modifierGroupId\"\r\n  } ],\r\n  \"mustEnterPrice\" : 0\r\n}, {\r\n  \"receiptName\" : \"receiptName\",\r\n  \"name\" : \"name\",\r\n  \"plu\" : \"plu\",\r\n  \"forceShowModifiers\" : true,\r\n  \"id\" : \"id\",\r\n  \"modifierGroups\" : [ {\r\n    \"modifierGroupId\" : \"modifierGroupId\"\r\n  }, {\r\n    \"modifierGroupId\" : \"modifierGroupId\"\r\n  } ],\r\n  \"mustEnterPrice\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Article>>(exampleJson)
            : default(List<Article>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/CancellationReasons")]
        [ValidateModelState]
        [SwaggerOperation("CancellationReasonsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CancellationReason>), description: "")]
        public virtual IActionResult CancellationReasonsGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CancellationReason>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<CancellationReason>>(exampleJson)
            : default(List<CancellationReason>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/Categories")]
        [ValidateModelState]
        [SwaggerOperation("CategoriesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Category>), description: "")]
        public virtual IActionResult CategoriesGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Category>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"content\" : [ {\r\n    \"articleId\" : \"articleId\"\r\n  }, {\r\n    \"articleId\" : \"articleId\"\r\n  } ]\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"content\" : [ {\r\n    \"articleId\" : \"articleId\"\r\n  }, {\r\n    \"articleId\" : \"articleId\"\r\n  } ]\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Category>>(exampleJson)
            : default(List<Category>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/ModifierGroups")]
        [ValidateModelState]
        [SwaggerOperation("ModifierGroupsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ModifierGroup>), description: "")]
        public virtual IActionResult ModifierGroupsGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ModifierGroup>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"question\" : \"question\",\r\n  \"name\" : \"name\",\r\n  \"maxChoices\" : 6,\r\n  \"id\" : \"id\",\r\n  \"type\" : { },\r\n  \"choices\" : [ {\r\n    \"receiptName\" : \"receiptName\",\r\n    \"minAmount\" : 5,\r\n    \"defaultAmount\" : 1,\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"maxAmount\" : 5\r\n  }, {\r\n    \"receiptName\" : \"receiptName\",\r\n    \"minAmount\" : 5,\r\n    \"defaultAmount\" : 1,\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"maxAmount\" : 5\r\n  } ],\r\n  \"minChoices\" : 0\r\n}, {\r\n  \"question\" : \"question\",\r\n  \"name\" : \"name\",\r\n  \"maxChoices\" : 6,\r\n  \"id\" : \"id\",\r\n  \"type\" : { },\r\n  \"choices\" : [ {\r\n    \"receiptName\" : \"receiptName\",\r\n    \"minAmount\" : 5,\r\n    \"defaultAmount\" : 1,\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"maxAmount\" : 5\r\n  }, {\r\n    \"receiptName\" : \"receiptName\",\r\n    \"minAmount\" : 5,\r\n    \"defaultAmount\" : 1,\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"maxAmount\" : 5\r\n  } ],\r\n  \"minChoices\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ModifierGroup>>(exampleJson)
            : default(List<ModifierGroup>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/OsConfiguration")]
        [ValidateModelState]
        [SwaggerOperation("OsConfigurationGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(OsConfiguration), description: "")]
        public virtual IActionResult OsConfigurationGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OsConfiguration));

            string exampleJson = null;
            exampleJson = "{\r\n  \"global\" : {\r\n    \"key\" : \"global\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OsConfiguration>(exampleJson)
            : default(OsConfiguration);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/PaymentMedia")]
        [ValidateModelState]
        [SwaggerOperation("PaymentMediaGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PaymentMedium>), description: "")]
        public virtual IActionResult PaymentMediaGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PaymentMedium>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\",\r\n  \"allowOverPayment\" : 0\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\",\r\n  \"allowOverPayment\" : 0\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PaymentMedium>>(exampleJson)
            : default(List<PaymentMedium>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/Printers")]
        [ValidateModelState]
        [SwaggerOperation("PrintersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Printer>), description: "")]
        public virtual IActionResult PrintersGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Printer>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"path\" : \"path\",\r\n  \"name\" : \"name\"\r\n}, {\r\n  \"path\" : \"path\",\r\n  \"name\" : \"name\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Printer>>(exampleJson)
            : default(List<Printer>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/ServiceAreas")]
        [ValidateModelState]
        [SwaggerOperation("ServiceAreasGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ServiceArea>), description: "")]
        public virtual IActionResult ServiceAreasGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ServiceArea>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ServiceArea>>(exampleJson)
            : default(List<ServiceArea>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/data/Users")]
        [ValidateModelState]
        [SwaggerOperation("UsersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "")]
        public virtual IActionResult UsersGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<User>));

            string exampleJson = null;
            exampleJson = "[ {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n}, {\r\n  \"name\" : \"name\",\r\n  \"id\" : \"id\"\r\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<User>>(exampleJson)
            : default(List<User>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
