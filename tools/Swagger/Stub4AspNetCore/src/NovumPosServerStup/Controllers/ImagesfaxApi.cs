/*
 * OrderSolution HTTP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.9.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using NovumPosServerStup.Attributes;
using NovumPosServerStup.Models;

namespace NovumPosServerStup.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ImagesfaxApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="id"></param>
        /// <response code="200"></response>
        [HttpGet]
        [Route("/api/v2/images/fax/{id}")]
        [ValidateModelState]
        [SwaggerOperation("FaxImageGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "")]
        public virtual IActionResult FaxImageGet([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Store a new fax image on the server. NOTE: The data will be read from the body as raw binary bytes.
        /// </summary>
        
        /// <param name="subTableId">Context information about the sub table to which the fax image is planned to be sent for. When later reffering to the fax image id we will always do so in the context of that sub table. This also means in case the sub table is not valid anymore (e.g. closed via payment) the OrderSolution also does not have a need for that image anymore which means the image can safely be deleted (from the OrderSolution perspective).</param>
        /// <response code="201">On success it will return the location of the newly stored image in location header.</response>
        /// <response code="400"></response>
        /// <response code="403"></response>
        [HttpPost]
        [Route("/api/v2/images/fax")]
        [ValidateModelState]
        [SwaggerOperation("FaxImagePost")]
        [SwaggerResponse(statusCode: 400, type: typeof(OsError), description: "")]
        [SwaggerResponse(statusCode: 403, type: typeof(OsError), description: "")]
        public virtual IActionResult FaxImagePost([FromQuery]string subTableId)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(OsError));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(OsError));


            throw new NotImplementedException();
        }

        /// <summary>
        /// Replace an existing fax image on the server. NOTE: The data will be read from the body as raw binary bytes.
        /// </summary>
        
        /// <param name="id">The ID of the fax image to overwrite.</param>
        /// <response code="204"></response>
        [HttpPut]
        [Route("/api/v2/images/fax/{id}")]
        [ValidateModelState]
        [SwaggerOperation("FaxImagePut")]
        public virtual IActionResult FaxImagePut([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);


            throw new NotImplementedException();
        }
    }
}
