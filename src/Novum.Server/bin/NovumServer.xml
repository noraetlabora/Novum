<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Novum.Server</name>
    </assembly>
    <members>
        <member name="T:Novum.Server.Controllers.Os.OsActionsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsController.AuthLogin(Novum.Server.Models.Os.LoginUser)">
            <summary>
            Execute a login transaciton. NOTE: Will set an \&quot;AuthToken\&quot; cookie needed in later authorized requests.
            </summary>
            <param name="data"></param>
            <response code="201"></response>
            <response code="401"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsController.AuthLogout">
            <summary>
            Logout from the server.
            </summary>
            <response code="204"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsController.InitRegisterClient(Novum.Server.Models.Os.ClientInfo)">
            <summary>
            Get initialization data for the client. Clients will have to call transactions/login to execute meaningful transactions.
            </summary>
            <param name="clientData"></param>
            <response code="200"></response>
            <response code="400"></response>
            <response code="412"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsController.InitRegisterGateway(Novum.Server.Models.Os.GatewayInfo)">
            <summary>
            Informs about a gateway (like OsServer) that is configured to work with this POS. A gateway is a system / server that clients use to communicate with the server.
            </summary>
            <param name="gatewayInfo">Information about the gateway.</param>
            <response code="204"></response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsActionsOrderlinesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsOrderlinesController.VoidOrderLines(System.String,Novum.Server.Models.Os.OrderLineVoid)">
            <summary>
            Modifies (&#x3D; replaces) an uncommited orderline. IMPORTANT: Any existing modifiers of the orderline are replaced with the new modifiers.  For example if an orderline \&quot;1x Coke with ice\&quot; is modified to be \&quot;1x Coke with Citron\&quot; the ice is also gone so the operation works as a replacement and not as a patch of the existing data.
            </summary>
            <param name="orderLineId">The orderline to be modified / replaced</param>
            <param name="data">The new data to be used for this order line (same as for the add request)</param>
            <response code="201">OrderLineResult informing about the new ids / prices of the modified orderline.</response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsOrderlinesController.AddOrderLines(System.String,Novum.Server.Models.Os.OrderLineAdd)">
            <summary>
            Add a new orderline to a sub table. (e.g. when the waiter orders an article on a table)
            </summary>
            <param name="subTableId">The ID of the subtable to add the order line to. Note: Orders are always part of a subtable and subtables are part of a table. This means at least 1 subtable exists for each table to allow ordering / adding orderlines.</param>
            <param name="data">The orderline to add.</param>
            <response code="201"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsOrderlinesController.ModifyOrderLinesUncommitted(System.String,Novum.Server.Models.Os.OrderLineModify)">
            <summary>
            Modifies (&#x3D; replaces) an uncommited orderline. IMPORTANT: Any existing modifiers of the orderline are replaced with the new modifiers.  For example if an orderline \&quot;1x Coke with ice\&quot; is modified to be \&quot;1x Coke with Citron\&quot; the ice is also gone so the operation works as a replacement and not as a patch of the existing data.
            </summary>
            <param name="orderLineId">The orderline to be modified / replaced</param>
            <param name="data">The new data to be used for this order line (same as for the add request)</param>
            <response code="201">OrderLineResult informing about the new ids / prices of the modified orderline.</response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsActionsPayController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsPayController.PaySubTables(Novum.Server.Models.Os.PaySubTables)">
            <summary>
            Pay sub full subtables. If the pay action is executed successfully the subtables will be fully paid and clsoed.
            </summary>
            <param name="data">Pay data describing which payments have to be executed for which subtables</param>
            <response code="204">OK in case the payment was successfull and the receipt is moved to the printer queue.</response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsPayController.PayOrderLines(Novum.Server.Models.Os.PayOrderLines)">
            <summary>
            Pay individual orderlines. Typically used when the bill is splitted.
            </summary>
            <param name="data">The orderlines to be paid + payment info.</param>
            <response code="204"></response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsActionsTablesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsTablesController.CreateSubTable(System.String)">
            <summary>
            Create a new subtable.
            </summary>
            <param name="tableId">The table this sub table is created for.</param>
            <response code="201"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsTablesController.OpenTableByName(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Open table by name. If it does not exist it will be created.
            </summary>
            <param name="name">The Name of the table to be opened. Is unique in the service area defined.</param>
            <param name="serviceAreaId">The ID of the service area in which the table should be opened.</param>
            <param name="prePayment">If provided defines if the request is in preparation of a payment action.</param>
            <response code="200"></response>
            <response code="201"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsActionsTablesController.FinalizeTableOrder(System.String)">
            <summary>
            Finalize the current order so that they the open orders are commited and the table is getting unlocked.
            </summary>
            <param name="tableId">Table to commit orders for.</param>
            <response code="204">No Content</response>
            <response code="401">Unauthorized</response>
            <response code="403">Forbidden</response>
            <response code="409">Conflict</response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsDataController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetArticles">
            <summary>
            
            </summary>
            <returns></returns>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetCancellationReasons">
            <summary>
            
            </summary>
            <returns></returns>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetCategories">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetModifierGroups">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetOsConfiguration">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetPaymentMedia">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetPrinters">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetServiceAreas">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetUsers">
            <summary>
            
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetOrderLines(System.String,System.String)">
            <summary>
            Get the order lines possibly filtered by the sub table id. NOTE: Only commited order lines (where actions/tables/FinalizeOrder was called) will be returned by this call.
            </summary>
            <param name="subTableId">The sub table ID getting orderlines for.</param>
            <param name="status">[ "unknown", "ordered", "committed", "paid" ] If specified the status of the orderlines that are required. If not provided all orderlines with status Ordered and Committed are returned</param>
            <response code="200">Orderlines with their unpaid quantity/price</response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsDataController.GetTables(System.String)">
            <summary>
            Get open tables for the service area.
            </summary>
            <param name="serviceAreaId">The service area id of the service area.</param>
            <response code="200">open tables array</response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsHostController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsHostController.GetHostStatus">
            <summary>
            Get the status of the host / POS. This will be regularly called by clients to detect status changes (like host / POS restarts)
            </summary>
            <response code="200"></response>
        </member>
        <member name="T:Novum.Server.Controllers.Os.OsImagesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsImagesController.GetFaxImage(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <response code="200"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsImagesController.PutFaxImage(System.String)">
            <summary>
            Replace an existing fax image on the server. NOTE: The data will be read from the body as raw binary bytes.
            </summary>
            <param name="id">The ID of the fax image to overwrite.</param>
            <response code="204"></response>
        </member>
        <member name="M:Novum.Server.Controllers.Os.OsImagesController.PostFaxImage(System.String)">
            <summary>
            Store a new fax image on the server. NOTE: The data will be read from the body as raw binary bytes.
            </summary>
            <param name="subTableId">Context information about the sub table to which the fax image is planned to be sent for. When later reffering to the fax image id we will always do so in the context of that sub table. This also means in case the sub table is not valid anymore (e.g. closed via payment) the OrderSolution also does not have a need for that image anymore which means the image can safely be deleted (from the OrderSolution perspective).</param>
            <response code="201">On success it will return the location of the newly stored image in location header.</response>
            <response code="400"></response>
            <response code="403"></response>
        </member>
        <member name="T:Novum.Server.Controllers.TablesController">
            <summary>
            
            </summary>
        </member>
        <member name="F:Novum.Server.Controllers.TablesController.Tables">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Controllers.TablesController.Get">
            <summary>
            GET api/v1/tables
            </summary>
            <returns></returns>
        </member>
        <member name="M:Novum.Server.Controllers.TablesController.Get(System.Int32)">
            <summary>
            GET api/v1/tables/1001.1/
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Novum.Server.Controllers.TablesController.Post(System.String)">
            <summary>
            POST api/v1/tables
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Novum.Server.Controllers.TablesController.Put(System.Int32,System.String)">
            <summary>
            // PUT api/v1/tables/5
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:Novum.Server.Controllers.TablesController.Delete(System.Int32)">
            <summary>
            DELETE api/v1/tables/5
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Novum.Server.Models.Os.Article">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.ReceiptName">
            <summary>
            Gets or Sets ReceiptName
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.Plu">
            <summary>
            Gets or Sets Plu
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.MustEnterPrice">
            <summary>
            Defines if the Article force price entry when ordered. 0 &#x3D; not forced; 1 &#x3D; price entry forced
            </summary>
            <value>Defines if the Article force price entry when ordered. 0 &#x3D; not forced; 1 &#x3D; price entry forced</value>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.ForceShowModifiers">
            <summary>
            If set to true AND modifier groups are assigned it forces the modifier screen to be shown right after the article was selected for ordering. (replaces the .IsMandatory from previous versions)
            </summary>
            <value>If set to true AND modifier groups are assigned it forces the modifier screen to be shown right after the article was selected for ordering. (replaces the .IsMandatory from previous versions)</value>
        </member>
        <member name="P:Novum.Server.Models.Os.Article.ModifierGroups">
            <summary>
            Gets or Sets ModifierGroups
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.Article.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Article.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Article.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Article.Equals(Novum.Server.Models.Os.Article)">
            <summary>
            Returns true if Article instances are equal
            </summary>
            <param name="other">Instance of Article to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Article.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ArticleModifierGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ArticleModifierGroup.ModifierGroupId">
            <summary>
            Gets or Sets ModifierGroupId
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.ArticleModifierGroup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ArticleModifierGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ArticleModifierGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ArticleModifierGroup.Equals(Novum.Server.Models.Os.ArticleModifierGroup)">
            <summary>
            Returns true if ArticleModifierGroup instances are equal
            </summary>
            <param name="other">Instance of ArticleModifierGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ArticleModifierGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.CancellationReason">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.CancellationReason.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.CancellationReason.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.CancellationReason.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CancellationReason.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CancellationReason.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CancellationReason.Equals(Novum.Server.Models.Os.CancellationReason)">
            <summary>
            Returns true if CancellationReason instances are equal
            </summary>
            <param name="other">Instance of CancellationReason to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CancellationReason.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Category.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Category.Content">
            <summary>
            Gets or Sets Content
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.Category.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Category.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Category.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Category.Equals(Novum.Server.Models.Os.Category)">
            <summary>
            Returns true if Category instances are equal
            </summary>
            <param name="other">Instance of Category to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Category.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.CategoryContentEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.CategoryContentEntry.Category">
            <summary>
            Gets or Sets Category
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.CategoryContentEntry.ArticleId">
            <summary>
            Gets or Sets ArticleId
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.CategoryContentEntry.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CategoryContentEntry.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CategoryContentEntry.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CategoryContentEntry.Equals(Novum.Server.Models.Os.CategoryContentEntry)">
            <summary>
            Returns true if CategoryContentEntry instances are equal
            </summary>
            <param name="other">Instance of CategoryContentEntry to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.CategoryContentEntry.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ClientInfo">
            <summary>
            Holds data about the remote client application / device that want&#39;s to communicate with the POS system.
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ClientInfo.Version">
            <summary>
            The version of the remote client application we are talking to.
            </summary>
            <value>The version of the remote client application we are talking to.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.ClientInfo.Id">
            <summary>
            The id of the remote client we are talking to. (should consist of an application name + device serial nummber)
            </summary>
            <value>The id of the remote client we are talking to. (should consist of an application name + device serial nummber)</value>
        </member>
        <member name="P:Novum.Server.Models.Os.ClientInfo.ClientName">
            <summary>
            The configured device name that can be configured via SC2 and is shown in our top status bar in the connect screen.
            </summary>
            <value>The configured device name that can be configured via SC2 and is shown in our top status bar in the connect screen.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.ClientInfo.PrinterPath">
            <summary>
            Optional. A path to the printer that can be used for send print jobs to this client if it supports them. For Orderman handheld devices this path will be provided if an Orderman belt printer is paired with that device. To send print jobs you can use the \&quot;/printers\&quot; api of the OsServer instance this init request was coming from. Example (we assume the OsServer is running on local host and it&#39;s httpApi port is configured to 12344:     - You receive the path \&quot;/printers/125-49944541\&quot;     - You can query details about this printer via \&quot;GET http://localhost:12344/api/v1/printers/125-49944541\&quot;     - To send a new print job: \&quot;POST http://localhost:12344/api/v1/printers/125-49944541/jobs\&quot; which will return        with a print job id immediately (in this example 38428)     - to query the print job status: \&quot;GET http://localhost:12344/api/v1/printers/125-49944541/jobs/38428\&quot;
            </summary>
            <value>Optional. A path to the printer that can be used for send print jobs to this client if it supports them. For Orderman handheld devices this path will be provided if an Orderman belt printer is paired with that device. To send print jobs you can use the \&quot;/printers\&quot; api of the OsServer instance this init request was coming from. Example (we assume the OsServer is running on local host and it&#39;s httpApi port is configured to 12344:     - You receive the path \&quot;/printers/125-49944541\&quot;     - You can query details about this printer via \&quot;GET http://localhost:12344/api/v1/printers/125-49944541\&quot;     - To send a new print job: \&quot;POST http://localhost:12344/api/v1/printers/125-49944541/jobs\&quot; which will return        with a print job id immediately (in this example 38428)     - to query the print job status: \&quot;GET http://localhost:12344/api/v1/printers/125-49944541/jobs/38428\&quot;</value>
        </member>
        <member name="M:Novum.Server.Models.Os.ClientInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ClientInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ClientInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ClientInfo.Equals(Novum.Server.Models.Os.ClientInfo)">
            <summary>
            Returns true if ClientInfo instances are equal
            </summary>
            <param name="other">Instance of ClientInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ClientInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.GatewayInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.GatewayInfo.HttpApiPort">
            <summary>
            The gateways port at which we can query status via http. For OsServer the default configuration in the configuration file is 12344. If omitted the gatway does not support status queries.
            </summary>
            <value>The gateways port at which we can query status via http. For OsServer the default configuration in the configuration file is 12344. If omitted the gatway does not support status queries.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.GatewayInfo.Name">
            <summary>
            The gatways name. In case of OsServer this name is defined in the servers configuration file.
            </summary>
            <value>The gatways name. In case of OsServer this name is defined in the servers configuration file.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.GatewayInfo.Id">
            <summary>
            The gatways ID. In case of an OsServer this ID is automatically generated on first start or set via the configuration file.
            </summary>
            <value>The gatways ID. In case of an OsServer this ID is automatically generated on first start or set via the configuration file.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.GatewayInfo.GatewaySessionId">
            <summary>
            The session ID of the gatway. It will change whenever the gateway restarts.
            </summary>
            <value>The session ID of the gatway. It will change whenever the gateway restarts.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.GatewayInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.GatewayInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.GatewayInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.GatewayInfo.Equals(Novum.Server.Models.Os.GatewayInfo)">
            <summary>
            Returns true if GatewayInfo instances are equal
            </summary>
            <param name="other">Instance of GatewayInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.GatewayInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.LoginUser">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.LoginUser.Id">
            <summary>
            For example when doing user selection via list with PIN the Id is the id of the employee selected from the list of data/employees.
            </summary>
            <value>For example when doing user selection via list with PIN the Id is the id of the employee selected from the list of data/employees.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.LoginUser.Password">
            <summary>
            Optional. Only provided if a real login authentication procedure was executed. For example when doing user selection via list with PIN the PIN is the password.
            </summary>
            <value>Optional. Only provided if a real login authentication procedure was executed. For example when doing user selection via list with PIN the PIN is the password.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.LoginUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.LoginUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.LoginUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.LoginUser.Equals(Novum.Server.Models.Os.LoginUser)">
            <summary>
            Returns true if LoginUser instances are equal
            </summary>
            <param name="other">Instance of LoginUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.LoginUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ModifierChoice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.ReceiptName">
            <summary>
            Gets or Sets ReceiptName
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.DefaultAmount">
            <summary>
            Gets or Sets DefaultAmount
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.MinAmount">
            <summary>
            Gets or Sets MinAmount
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierChoice.MaxAmount">
            <summary>
            Gets or Sets MaxAmount
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierChoice.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierChoice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierChoice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierChoice.Equals(Novum.Server.Models.Os.ModifierChoice)">
            <summary>
            Returns true if ModifierChoice instances are equal
            </summary>
            <param name="other">Instance of ModifierChoice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierChoice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ModifierGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.Question">
            <summary>
            Gets or Sets Question
            </summary>
        </member>
        <member name="T:Novum.Server.Models.Os.ModifierGroup.ModifierType">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierGroup.ModifierType.PickOneEnum">
            <summary>
            Enum PickOneEnum for pickOne
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierGroup.ModifierType.PickMultipleEnum">
            <summary>
            Enum PickMultipleEnum for pickMultiple
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierGroup.ModifierType.PickNumericEnum">
            <summary>
            Enum PickNumericEnum for pickNumeric
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierGroup.ModifierType.TextInputEnum">
            <summary>
            Enum TextInputEnum for textInput
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierGroup.ModifierType.FaxInputEnum">
            <summary>
            Enum FaxInputEnum for faxInput
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.MinChoices">
            <summary>
            Gets or Sets MinChoices
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.MaxChoices">
            <summary>
            Gets or Sets MaxChoices
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ModifierGroup.Choices">
            <summary>
            Gets or Sets Choices
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierGroup.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierGroup.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierGroup.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierGroup.Equals(Novum.Server.Models.Os.ModifierGroup)">
            <summary>
            Returns true if ModifierGroup instances are equal
            </summary>
            <param name="other">Instance of ModifierGroup to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ModifierGroup.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ModifierType">
            <summary>
            0 – pickOne - One option to select from ModifierGroupChoices. 1 – pickMultiple - Select several options from ModifierGroupChoices. 2 – pickNumeric - Select numeric choices from ModifierGroupChoices 3 – textInput -  Asks for arbitary text input 4 – faxInput - Asks for handwritten input
            </summary>
            <value>0 – pickOne - One option to select from ModifierGroupChoices. 1 – pickMultiple - Select several options from ModifierGroupChoices. 2 – pickNumeric - Select numeric choices from ModifierGroupChoices 3 – textInput -  Asks for arbitary text input 4 – faxInput - Asks for handwritten input</value>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierType.PickOneEnum">
            <summary>
            Enum PickOneEnum for pickOne
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierType.PickMultipleEnum">
            <summary>
            Enum PickMultipleEnum for pickMultiple
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierType.PickNumericEnum">
            <summary>
            Enum PickNumericEnum for pickNumeric
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierType.TextInputEnum">
            <summary>
            Enum TextInputEnum for textInput
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.ModifierType.FaxInputEnum">
            <summary>
            Enum FaxInputEnum for faxInput
            </summary>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.ArticleId">
            <summary>
            Gets or Sets ArticleId
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.Quantity">
            <summary>
            The unpaid quantity of this orderline.
            </summary>
            <value>The unpaid quantity of this orderline.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.SinglePrice">
            <summary>
            The unpaid price of this orderline.
            </summary>
            <value>The unpaid price of this orderline.</value>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLine.OrderLineStatus">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLine.OrderLineStatus.UnknownEnum">
            <summary>
            Enum UnknownEnum for unknown
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLine.OrderLineStatus.OrderedEnum">
            <summary>
            Enum OrderedEnum for ordered
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLine.OrderLineStatus.CommittedEnum">
            <summary>
            Enum CommittedEnum for committed
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLine.OrderLineStatus.PaidEnum">
            <summary>
            Enum PaidEnum for paid
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLine.Modifiers">
            <summary>
            Gets or Sets Modifiers
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLine.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLine.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLine.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLine.Equals(Novum.Server.Models.Os.OrderLine)">
            <summary>
            Returns true if OrderLine instances are equal
            </summary>
            <param name="other">Instance of OrderLine to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLine.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineAdd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineAdd.Quantity">
            <summary>
            The quantity for this order line. When adding a new order line this value must be set.
            </summary>
            <value>The quantity for this order line. When adding a new order line this value must be set.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineAdd.EnteredPrice">
            <summary>
            Defines a manual price for this order line. NOTE: You must not provide this parameter if you want the price to be calculated by the POS.
            </summary>
            <value>Defines a manual price for this order line. NOTE: You must not provide this parameter if you want the price to be calculated by the POS.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineAdd.Modifiers">
            <summary>
            Modifiers to be assigned for this orderline.
            </summary>
            <value>Modifiers to be assigned for this orderline.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineAdd.ArticleId">
            <summary>
            The ID of the article ordered with this orderline.
            </summary>
            <value>The ID of the article ordered with this orderline.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineAdd.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineAdd.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineAdd.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineAdd.Equals(Novum.Server.Models.Os.OrderLineAdd)">
            <summary>
            Returns true if OrderLineAdd instances are equal
            </summary>
            <param name="other">Instance of OrderLineAdd to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineAdd.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineModifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier.ModifierGroupId">
            <summary>
            Gets or Sets ModifierGroupId
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier.TextInput">
            <summary>
            Gets or Sets TextInput
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier.FaxInputID">
            <summary>
            The ID of the FaxInput image. Can be a number, url, ... The format if this ID is defined by the POS storage behavior. TODO: When the FaxInput storage API is defined we may have to update this.
            </summary>
            <value>The ID of the FaxInput image. Can be a number, url, ... The format if this ID is defined by the POS storage behavior. TODO: When the FaxInput storage API is defined we may have to update this.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier.Choices">
            <summary>
            Gets or Sets Choices
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier.Equals(Novum.Server.Models.Os.OrderLineModifier)">
            <summary>
            Returns true if OrderLineModifier instances are equal
            </summary>
            <param name="other">Instance of OrderLineModifier to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineModifier2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier2.ModifierGroupId">
            <summary>
            The ID of the modifier group this modifiers belong to. This must be the groupd ID the choices belong to.
            </summary>
            <value>The ID of the modifier group this modifiers belong to. This must be the groupd ID the choices belong to.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier2.TextInput">
            <summary>
            The enterd text in case the modifier group is of type free text entry.
            </summary>
            <value>The enterd text in case the modifier group is of type free text entry.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier2.FaxInputID">
            <summary>
            The ID of the FaxInput image in case the modifier group is of type fax. Can be a number, url, ... The format if this ID is defined by the POS storage behavior. TODO: When the FaxInput storage API is defined we may have to update this.
            </summary>
            <value>The ID of the FaxInput image in case the modifier group is of type fax. Can be a number, url, ... The format if this ID is defined by the POS storage behavior. TODO: When the FaxInput storage API is defined we may have to update this.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifier2.Choices">
            <summary>
            The selected choices in case modifier group is of type PickOne, PickMultiple, PickNumeric, Pick...
            </summary>
            <value>The selected choices in case modifier group is of type PickOne, PickMultiple, PickNumeric, Pick...</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier2.Equals(Novum.Server.Models.Os.OrderLineModifier2)">
            <summary>
            Returns true if OrderLineModifier2 instances are equal
            </summary>
            <param name="other">Instance of OrderLineModifier2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifier2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineModifierChoice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifierChoice.ModifierChoiceId">
            <summary>
            Gets or Sets ModifierChoiceId
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifierChoice.Amount">
            <summary>
            Gets or Sets Amount
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifierChoice.ChoicePrice">
            <summary>
            Gets or Sets ChoicePrice
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice.Equals(Novum.Server.Models.Os.OrderLineModifierChoice)">
            <summary>
            Returns true if OrderLineModifierChoice instances are equal
            </summary>
            <param name="other">Instance of OrderLineModifierChoice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineModifierChoice2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifierChoice2.ModifierChoiceId">
            <summary>
            The ID of the choice that was selected.
            </summary>
            <value>The ID of the choice that was selected.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModifierChoice2.Amount">
            <summary>
            The amount how often the choices was selected. Defaults to 1 if omitted.
            </summary>
            <value>The amount how often the choices was selected. Defaults to 1 if omitted.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice2.Equals(Novum.Server.Models.Os.OrderLineModifierChoice2)">
            <summary>
            Returns true if OrderLineModifierChoice2 instances are equal
            </summary>
            <param name="other">Instance of OrderLineModifierChoice2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModifierChoice2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineModify">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModify.Quantity">
            <summary>
            The quantity for this order line. When adding a new order line this value must be set.
            </summary>
            <value>The quantity for this order line. When adding a new order line this value must be set.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModify.EnteredPrice">
            <summary>
            Defines a manual price for this order line. NOTE: You must not provide this parameter if you want the price to be calculated by the POS.
            </summary>
            <value>Defines a manual price for this order line. NOTE: You must not provide this parameter if you want the price to be calculated by the POS.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineModify.Modifiers">
            <summary>
            The modifiers for this orderline.
            </summary>
            <value>The modifiers for this orderline.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModify.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModify.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModify.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModify.Equals(Novum.Server.Models.Os.OrderLineModify)">
            <summary>
            Returns true if OrderLineModify instances are equal
            </summary>
            <param name="other">Instance of OrderLineModify to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineModify.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineQuanity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineQuanity.OrderLineId">
            <summary>
            The ID of the orderline to be paid.
            </summary>
            <value>The ID of the orderline to be paid.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineQuanity.Quantity">
            <summary>
            The quantity of the orderline in question that should be paid. IMPORTANT: This can be the full orderline or just a part of it.
            </summary>
            <value>The quantity of the orderline in question that should be paid. IMPORTANT: This can be the full orderline or just a part of it.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineQuanity.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineQuanity.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineQuanity.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineQuanity.Equals(Novum.Server.Models.Os.OrderLineQuanity)">
            <summary>
            Returns true if OrderLineQuanity instances are equal
            </summary>
            <param name="other">Instance of OrderLineQuanity to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineQuanity.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResult.Id">
            <summary>
            The ID of the orderline in question.
            </summary>
            <value>The ID of the orderline in question.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResult.SinglePrice">
            <summary>
            The single price of the order line / article.
            </summary>
            <value>The single price of the order line / article.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResult.Modifiers">
            <summary>
            The modifiers of that orderline.
            </summary>
            <value>The modifiers of that orderline.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResult.Equals(Novum.Server.Models.Os.OrderLineResult)">
            <summary>
            Returns true if OrderLineResult instances are equal
            </summary>
            <param name="other">Instance of OrderLineResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineResultModifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResultModifier.Id">
            <summary>
            The ID of that modifier selection that uniquly identifies this entry.
            </summary>
            <value>The ID of that modifier selection that uniquly identifies this entry.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResultModifier.Choices">
            <summary>
            The modifer chioces.
            </summary>
            <value>The modifer chioces.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifier.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifier.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifier.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifier.Equals(Novum.Server.Models.Os.OrderLineResultModifier)">
            <summary>
            Returns true if OrderLineResultModifier instances are equal
            </summary>
            <param name="other">Instance of OrderLineResultModifier to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifier.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineResultModifierChoice">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResultModifierChoice.ModifierChoiceId">
            <summary>
            The ID of the choices in question.
            </summary>
            <value>The ID of the choices in question.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineResultModifierChoice.ChoicePrice">
            <summary>
            If provided the price of that choice.
            </summary>
            <value>If provided the price of that choice.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifierChoice.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifierChoice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifierChoice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifierChoice.Equals(Novum.Server.Models.Os.OrderLineResultModifierChoice)">
            <summary>
            Returns true if OrderLineResultModifierChoice instances are equal
            </summary>
            <param name="other">Instance of OrderLineResultModifierChoice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineResultModifierChoice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineStatus">
            <summary>
            Represents the status of a given Orderline. Unknown = 0, Ordered = 1, // This orderline was not yet commited/confirmed Committed = 2, Paid = 3
            </summary>
            <value>Represents the status of a given Orderline. Unknown = 0, Ordered = 1, // This orderline was not yet commited/confirmed Committed = 2, Paid = 3</value>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLineStatus.UnknownEnum">
            <summary>
            Enum UnknownEnum for unknown
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLineStatus.OrderedEnum">
            <summary>
            Enum OrderedEnum for ordered
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLineStatus.CommittedEnum">
            <summary>
            Enum CommittedEnum for committed
            </summary>
        </member>
        <member name="F:Novum.Server.Models.Os.OrderLineStatus.PaidEnum">
            <summary>
            Enum PaidEnum for paid
            </summary>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineVoid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineVoid.Quantity">
            <summary>
            Defines the quantity that is voided from an existing orderline. If the quanity is 0 nothing is changed. If the quantity is &amp;gt;&#x3D; the quantity of the orderline the whole orderline will be voided.
            </summary>
            <value>Defines the quantity that is voided from an existing orderline. If the quanity is 0 nothing is changed. If the quantity is &amp;gt;&#x3D; the quantity of the orderline the whole orderline will be voided.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineVoid.CancellationReasonId">
            <summary>
            Defines the cancellation reasion that must be provided if a already commited orderline should be voided.
            </summary>
            <value>Defines the cancellation reasion that must be provided if a already commited orderline should be voided.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoid.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoid.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoid.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoid.Equals(Novum.Server.Models.Os.OrderLineVoid)">
            <summary>
            Returns true if OrderLineVoid instances are equal
            </summary>
            <param name="other">Instance of OrderLineVoid to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoid.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OrderLineVoidResult">
            <summary>
            Provides information about the new status of the orderline after void processing.
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineVoidResult.OrderLineId">
            <summary>
            The ID of the orderline that a void operation was executed on.
            </summary>
            <value>The ID of the orderline that a void operation was executed on.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineVoidResult.SinglePrice">
            <summary>
            The single price of the orderline. This will typically be the same as before but it might change in case of volumen discounts.
            </summary>
            <value>The single price of the orderline. This will typically be the same as before but it might change in case of volumen discounts.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.OrderLineVoidResult.Quantity">
            <summary>
            The new quantiy of this orderline.
            </summary>
            <value>The new quantiy of this orderline.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoidResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoidResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoidResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoidResult.Equals(Novum.Server.Models.Os.OrderLineVoidResult)">
            <summary>
            Returns true if OrderLineVoidResult instances are equal
            </summary>
            <param name="other">Instance of OrderLineVoidResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OrderLineVoidResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OsConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OsConfiguration.Global">
            <summary>
            Key &#x3D; key of configuration Value &#x3D; value of the configuration
            </summary>
            <value>Key &#x3D; key of configuration Value &#x3D; value of the configuration</value>
        </member>
        <member name="M:Novum.Server.Models.Os.OsConfiguration.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsConfiguration.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsConfiguration.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsConfiguration.Equals(Novum.Server.Models.Os.OsConfiguration)">
            <summary>
            Returns true if OsConfiguration instances are equal
            </summary>
            <param name="other">Instance of OsConfiguration to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsConfiguration.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.OsError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.OsError.ErrorMsg">
            <summary>
            Gets or Sets ErrorMsg
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.OsError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsError.Equals(Novum.Server.Models.Os.OsError)">
            <summary>
            Returns true if OsError instances are equal
            </summary>
            <param name="other">Instance of OsError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.OsError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.PayBase">
            <summary>
            Base type for executing payments for something and execute print jobs (like for the bill for that payment).
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PayBase.Payments">
            <summary>
            The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.
            </summary>
            <value>The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.PayBase.Printer">
            <summary>
            Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets
            </summary>
            <value>Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets</value>
        </member>
        <member name="M:Novum.Server.Models.Os.PayBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayBase.Equals(Novum.Server.Models.Os.PayBase)">
            <summary>
            Returns true if PayBase instances are equal
            </summary>
            <param name="other">Instance of PayBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.Payment">
            <summary>
            Describes a single payment done. A receipt can be paid with several different payments.
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Payment.AmountPaid">
            <summary>
            The amount that will get paid.
            </summary>
            <value>The amount that will get paid.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.Payment.PaymentMediaId">
            <summary>
            The payment media type (id) used for this amount. (example: Cash, Credit Card, ...)
            </summary>
            <value>The payment media type (id) used for this amount. (example: Cash, Credit Card, ...)</value>
        </member>
        <member name="M:Novum.Server.Models.Os.Payment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Payment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Payment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Payment.Equals(Novum.Server.Models.Os.Payment)">
            <summary>
            Returns true if Payment instances are equal
            </summary>
            <param name="other">Instance of Payment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Payment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.PaymentMedium">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PaymentMedium.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PaymentMedium.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PaymentMedium.AllowOverPayment">
            <summary>
            Optional. 0 &#x3D; when using this media the app will not allow to enter a higher payment amount as to be paid. 1 &#x3D; over payment is allowed
            </summary>
            <value>Optional. 0 &#x3D; when using this media the app will not allow to enter a higher payment amount as to be paid. 1 &#x3D; over payment is allowed</value>
        </member>
        <member name="M:Novum.Server.Models.Os.PaymentMedium.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaymentMedium.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaymentMedium.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaymentMedium.Equals(Novum.Server.Models.Os.PaymentMedium)">
            <summary>
            Returns true if PaymentMedium instances are equal
            </summary>
            <param name="other">Instance of PaymentMedium to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaymentMedium.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.PayOrderLines">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PayOrderLines.Payments">
            <summary>
            The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.
            </summary>
            <value>The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.PayOrderLines.Printer">
            <summary>
            Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets
            </summary>
            <value>Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets</value>
        </member>
        <member name="P:Novum.Server.Models.Os.PayOrderLines.PaidLines">
            <summary>
            List of order line payments that represent the orderlines (-parts) that will be paied with this set.
            </summary>
            <value>List of order line payments that represent the orderlines (-parts) that will be paied with this set.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.PayOrderLines.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayOrderLines.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayOrderLines.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayOrderLines.Equals(Novum.Server.Models.Os.PayOrderLines)">
            <summary>
            Returns true if PayOrderLines instances are equal
            </summary>
            <param name="other">Instance of PayOrderLines to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PayOrderLines.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.PaySubTables">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PaySubTables.Payments">
            <summary>
            The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.
            </summary>
            <value>The payments to be executed on the amount sum we get from all the sub tables in SubTableIds. Special Case: Empty payments / Payments omitted is used to close empty tables.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.PaySubTables.Printer">
            <summary>
            Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets
            </summary>
            <value>Identifies the printer to send the receipt print job to.  example: &#39;local://1&#39; check GET /api/v2/data/Printers to get a list of supported print targets</value>
        </member>
        <member name="P:Novum.Server.Models.Os.PaySubTables.SubTableIds">
            <summary>
            Array of sub table ids. The sum of the amount of all these subtables together will be paid by  Payments. NOTE: The sub table IDs can only be from the same table. An error will be returned if they are from more then one table.
            </summary>
            <value>Array of sub table ids. The sum of the amount of all these subtables together will be paid by  Payments. NOTE: The sub table IDs can only be from the same table. An error will be returned if they are from more then one table.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.PaySubTables.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaySubTables.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaySubTables.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaySubTables.Equals(Novum.Server.Models.Os.PaySubTables)">
            <summary>
            Returns true if PaySubTables instances are equal
            </summary>
            <param name="other">Instance of PaySubTables to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PaySubTables.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.POSInfo">
            <summary>
            Provides site specific data on successful initialization.
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.POSInfo.RestaurantName">
            <summary>
            The name of the restaurant we are working with.
            </summary>
            <value>The name of the restaurant we are working with.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.POSInfo.UtcTime">
            <summary>
            The current UTC time stamp (in seconds since epoch time). Used for synchronization between clients and the server.
            </summary>
            <value>The current UTC time stamp (in seconds since epoch time). Used for synchronization between clients and the server.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.POSInfo.ClientName">
            <summary>
            If provided this name will be shown in the connection / login screen instead of the device name configured in the device (done via SC2). If not provided the original name as provided in the request / ClientInfo is shown.
            </summary>
            <value>If provided this name will be shown in the connection / login screen instead of the device name configured in the device (done via SC2). If not provided the original name as provided in the request / ClientInfo is shown.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.POSInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.POSInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.POSInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.POSInfo.Equals(Novum.Server.Models.Os.POSInfo)">
            <summary>
            Returns true if POSInfo instances are equal
            </summary>
            <param name="other">Instance of POSInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.POSInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.PosStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.PosStatus.SessionId">
            <summary>
            Whenever the POS is restarted this session should change to allow the gateway to detect restarts.
            </summary>
            <value>Whenever the POS is restarted this session should change to allow the gateway to detect restarts.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.PosStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PosStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PosStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PosStatus.Equals(Novum.Server.Models.Os.PosStatus)">
            <summary>
            Returns true if PosStatus instances are equal
            </summary>
            <param name="other">Instance of PosStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.PosStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.Printer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.Printer.Name">
            <summary>
            The friendly name of the printer informing the employee about which printer it is or where the printer might be connected to (like if it is a belt printer it should be clear from the name to which handheld this belt printer is connected to)
            </summary>
            <value>The friendly name of the printer informing the employee about which printer it is or where the printer might be connected to (like if it is a belt printer it should be clear from the name to which handheld this belt printer is connected to)</value>
        </member>
        <member name="P:Novum.Server.Models.Os.Printer.Path">
            <summary>
            The path of the printer used to define the printer to which a print job is sent
            </summary>
            <value>The path of the printer used to define the printer to which a print job is sent</value>
        </member>
        <member name="M:Novum.Server.Models.Os.Printer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Printer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Printer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Printer.Equals(Novum.Server.Models.Os.Printer)">
            <summary>
            Returns true if Printer instances are equal
            </summary>
            <param name="other">Instance of Printer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.Printer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.ServiceArea">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ServiceArea.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.ServiceArea.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:Novum.Server.Models.Os.ServiceArea.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ServiceArea.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ServiceArea.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ServiceArea.Equals(Novum.Server.Models.Os.ServiceArea)">
            <summary>
            Returns true if ServiceArea instances are equal
            </summary>
            <param name="other">Instance of ServiceArea to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.ServiceArea.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.SubTable">
            <summary>
            Information about the subtable
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.SubTable.Id">
            <summary>
            The ID of the subtable.             
            </summary>
            <value>The ID of the subtable.             </value>
        </member>
        <member name="P:Novum.Server.Models.Os.SubTable.Name">
            <summary>
            The name of the subtable.
            </summary>
            <value>The name of the subtable.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.SubTable.IsSelected">
            <summary>
            If true this subtable will be selected when the table is opened. Can be used to directly show another subtable as the first one int he list to the user.
            </summary>
            <value>If true this subtable will be selected when the table is opened. Can be used to directly show another subtable as the first one int he list to the user.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.SubTable.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.SubTable.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.SubTable.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.SubTable.Equals(Novum.Server.Models.Os.SubTable)">
            <summary>
            Returns true if SubTable instances are equal
            </summary>
            <param name="other">Instance of SubTable to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.SubTable.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.TableResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.Id">
            <summary>
            ID of the table.
            </summary>
            <value>ID of the table.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.Name">
            <summary>
            Name of the table.
            </summary>
            <value>Name of the table.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.LastActivityTime">
            <summary>
            Last time there was activity on this table. (Unix Timestamp in seconds &#x3D; seconds since Jan 01 1970 UTC)
            </summary>
            <value>Last time there was activity on this table. (Unix Timestamp in seconds &#x3D; seconds since Jan 01 1970 UTC)</value>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.BookedAmount">
            <summary>
            The amount (that finally has to be paid) that is currently booked on this table . This is the sum of all orderlines in all subtables of this table including possible choice prices.
            </summary>
            <value>The amount (that finally has to be paid) that is currently booked on this table . This is the sum of all orderlines in all subtables of this table including possible choice prices.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.SubTables">
            <summary>
            The subtables of this table.
            </summary>
            <value>The subtables of this table.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.TableResult.ServiceAreaId">
            <summary>
            The ID of the service area this table belongs to.
            </summary>
            <value>The ID of the service area this table belongs to.</value>
        </member>
        <member name="M:Novum.Server.Models.Os.TableResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.TableResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.TableResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.TableResult.Equals(Novum.Server.Models.Os.TableResult)">
            <summary>
            Returns true if TableResult instances are equal
            </summary>
            <param name="other">Instance of TableResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.TableResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Os.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Os.User.Id">
            <summary>
            The user / employee identifier. Will be used in the auth/login action.
            </summary>
            <value>The user / employee identifier. Will be used in the auth/login action.</value>
        </member>
        <member name="P:Novum.Server.Models.Os.User.Name">
            <summary>
            The employees real name like John Doe. This name will be shown on the statusbar of the clients after login
            </summary>
            <value>The employees real name like John Doe. This name will be shown on the statusbar of the clients after login</value>
        </member>
        <member name="M:Novum.Server.Models.Os.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.User.Equals(Novum.Server.Models.Os.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="other">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Novum.Server.Models.Os.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Novum.Server.Models.Table">
            <summary>
            
            </summary>
        </member>
        <member name="P:Novum.Server.Models.Table.Id">
            <summary>
            
            </summary>
            <value>"1001.1"</value>
        </member>
        <member name="P:Novum.Server.Models.Table.Name">
            <summary>
            
            </summary>
            <value>"1.1"</value>
        </member>
        <member name="P:Novum.Server.Models.Table.Sum">
            <summary>
            
            </summary>
            <value>123.45</value>
        </member>
        <member name="T:Novum.Server.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Novum.Server.Program.BuildWebHost(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Novum.Server.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Novum.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Novum.Server.Startup.Configuration">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:Novum.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Novum.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:Novum.Server.Utils.Middleware">
            <summary>
             Middleware for Logging all Requests and Response
            https://salslab.com/a/safely-logging-api-requests-and-responses-in-asp-net-core
            </summary>
        </member>
        <member name="M:Novum.Server.Utils.Middleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Novum.Server.Utils.Middleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
    </members>
</doc>
